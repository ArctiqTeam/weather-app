apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "2"
  labels:
    app.kubernetes.io/component: app-scaler
    app.kubernetes.io/managed-by: kf
    app.kubernetes.io/name: weather
  name: weather
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/component: app-server
      app.kubernetes.io/managed-by: kf
      app.kubernetes.io/name: weather
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
        traffic.sidecar.istio.io/includeOutboundIPRanges: '*'
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: app-server
        app.kubernetes.io/managed-by: kf
        app.kubernetes.io/name: weather
        kf.dev/networkpolicy: app
    spec:
      containers:
      - env:
        - name: PORT
          value: "8080"
        - name: VCAP_APP_PORT
          value: $(PORT)
        - name: CF_INSTANCE_IP
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.podIP
        - name: CF_INSTANCE_INTERNAL_IP
          value: $(CF_INSTANCE_IP)
        - name: VCAP_APP_HOST
          value: $(CF_INSTANCE_IP)
        - name: CF_INSTANCE_PORT
          value: "8080"
        - name: CF_INSTANCE_ADDR
          value: $(CF_INSTANCE_IP):$(CF_INSTANCE_PORT)
        - name: CF_INSTANCE_GUID
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.uid
        - name: INSTANCE_GUID
          value: $(CF_INSTANCE_GUID)
        - name: CF_INSTANCE_INDEX
          value: "0"
        - name: INSTANCE_INDEX
          value: $(CF_INSTANCE_INDEX)
        - name: MEMORY_LIMIT
          valueFrom:
            resourceFieldRef:
              divisor: 1Mi
              resource: limits.memory
        - name: DISK_LIMIT
          valueFrom:
            resourceFieldRef:
              divisor: 1Mi
              resource: limits.ephemeral-storage
        - name: LANG
          value: en_US.UTF-8
        - name: VCAP_SERVICES
          valueFrom:
            secretKeyRef:
              key: VCAP_SERVICES
              name: kf-injected-envs-weather
              optional: false
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              key: DATABASE_URL
              name: kf-injected-envs-weather
              optional: true
        - name: MEMORY_LIMIT
          value: $(MEMORY_LIMIT)M
        - name: KF_UPDATE_REQUESTS_6f543170-e8a4-41e1-93af-7cff76002cda
          value: "0"
        image: northamerica-northeast1-docker.pkg.dev/arctiq-anthos/kf-processing/app_weather_weather-0:7c3331cf-951a-4a99-8ef3-8ed75f6902c0
        imagePullPolicy: Always
        name: user-container
        ports:
        - containerPort: 8080
          name: http-user-port
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          periodSeconds: 10
          successThreshold: 1
          tcpSocket:
            port: 8080
          timeoutSeconds: 60
        resources:
          requests:
            cpu: 100m
            ephemeral-storage: 1Gi
            memory: 1Gi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      enableServiceLinks: false
      restartPolicy: Always
      schedulerName: default-scheduler
      serviceAccount: sa-weather
      serviceAccountName: sa-weather
      terminationGracePeriodSeconds: 30

